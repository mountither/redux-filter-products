[{"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/index.js":"1","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reportWebVitals.js":"2","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/App.js":"3","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/store/index.js":"4","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/utils/history.js":"5","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/FilterCollection.js":"6","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/index.js":"7","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/saga/index.js":"8","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions/index.js":"9","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/index.js":"10","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/ProductFilterReducer.js":"11","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/filterInfo.js":"12"},{"size":571,"mtime":1614060699745,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1612352402630,"results":"15","hashOfConfig":"14"},{"size":662,"mtime":1614578779784,"results":"16","hashOfConfig":"14"},{"size":647,"mtime":1614660403020,"results":"17","hashOfConfig":"14"},{"size":87,"mtime":1614042383945,"results":"18","hashOfConfig":"14"},{"size":4409,"mtime":1626996683494,"results":"19","hashOfConfig":"14"},{"size":202,"mtime":1626996896652,"results":"20","hashOfConfig":"14"},{"size":4345,"mtime":1626996500582,"results":"21","hashOfConfig":"14"},{"size":955,"mtime":1626996761911,"results":"22","hashOfConfig":"14"},{"size":352,"mtime":1614660403017,"results":"23","hashOfConfig":"14"},{"size":4980,"mtime":1626996976004,"results":"24","hashOfConfig":"14"},{"size":3312,"mtime":1626997008039,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"znqjzb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/index.js",[],["53","54"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reportWebVitals.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/App.js",["55","56","57"],"import logo from './logo.svg';\nimport './App.css';\nimport FilterCollection from './filterViews/FilterCollection'\nimport { Switch, Route, Router, Link} from 'react-router-dom';\nimport history from './utils/history'\nimport { connect } from \"react-redux\";\nimport store from './store'\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          <Route exact path='/' render={() => <Link to=\"/products/\">Products</Link>}/>      \n          <Route exact path='/products/' \n            render={() => <FilterCollection />}\n            /> \n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/store/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/utils/history.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/FilterCollection.js",["58"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/index.js",["59","60"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/saga/index.js",["61","62","63","64","65"],"import { takeEvery, put, select, all, call, fork } from 'redux-saga/effects';\nimport { useLocation} from 'react-router-dom'\nimport {fetchProductsIfNeeded, fetchProducts, initFilters, urlChange, receiveProducts, requestProducts} from '../actions';\nimport qs from \"query-string\";\nimport {limitInit} from '../initialisation'\n\n// this solves the issue of taking query direct from the window location, \n// rather than the redux router state.\n// when the init_app dispatch is used, the router values will be present,\n// we can alter and add the necessary values with this method.\nfunction* initProductsPage() {\n    // url location is extracted (select) from the state.router \n\n    // const params = new URLSearchParams(window.location.search);\n    // console.log('PARAMS',qs.exclude(window.location.search, ['page']))\n    const queryURL = qs.parse(window.location.search,{parseNumbers: true, arrayFormat: 'comma'});\n    // const urlString = qs.stringify(window.location.search, {arrayFormat: 'comma', skipNull: true, skipEmptyString: true})\n\n    const pageNo = parseInt(queryURL.page) || 1;\n\n    // create an array of the items found in url.\n    // const filters = Array.from(params.entries()).map((filter) => { return {id: parseInt(filter[1]), field:filter[0]}});\n    // store the state router location retrieved from the url. \n    \n    // problem:\n            // when getting old state, the func iterates twice \n            // intial state is used for filters. \n            // yield all(filters.map((filter) =>  {return put(toggleFilter(filter.id, filter.field, params.toString()))}));\n            \n    // yield put(urlChange(window.location.search))\n\n            \n    if(Object.keys(queryURL).length> 0){\n\n        Object.keys(queryURL).map( field =>\n            queryURL[field]= Array.isArray(queryURL[field]) ? queryURL[field] : [queryURL[field]]\n        )\n        \n        yield put(initFilters(queryURL))\n    }        \n\n    // yield put(fetchProductsIfNeeded({\n    //     config: {\n    //         skip: 0,\n    //         limit: limitInit * pageNo,\n    //         page: pageNo,\n    //         success: false,\n    //     }\n    // }))\n\n    yield put({type:'GET_PRODUCTS', \n            config: {\n                skip: 0,\n                limit: limitInit * pageNo,\n                page: pageNo,\n                initUrl: true,\n            }\n    })\n\n    return;\n}\n\n\nexport const getOutcome = (state) => state.outcome\n\nfunction* processProducts(action){\n    console.log('ACTION IN SAGA ',action);\n    // console.log('STATE IN SAGA ',yield select(getOutcome));\n\n    try {\n        // get the current state \n        let outcome = yield select(getOutcome);\n        // strigfy the params found in state and send in url change\n        const queryFilters = qs.stringify(outcome.meta.params,\n            {arrayFormat: 'comma', skipNull: true, skipEmptyString: true});\n        //call getProducts to return response. \n        const response = yield call(getProducts, queryFilters, action.config)\n        console.log(response);\n        // check if success. if so, dispatch actions\n        if (response.status >= 200 && response.status < 300) {    \n            const products = yield response.json()\n            yield put(requestProducts())\n            yield put(receiveProducts(products, action.config, outcome))\n            yield put(urlChange(queryFilters, {\n                    urlConfig: \n                        {\n                            loadMore: action.config.loadMore, \n                            initUrl: action.config.initUrl\n                        }\n                    }))\n        }\n        else{\n            throw response.statusText;\n        }\n\n    } \n    catch (error) {\n        console.log(error);\n    }\n\n}\n\nconst getProducts = (query, config) =>{\n    \n\n    const url = `${process.env.REACT_APP_SERVER}:8000/api/products/?${query}&skip=${config.skip}&limit=${config.limit}`\n    \n    // `${queryFilters ? '?'+queryFilters: ''}`\n    const queryToServer = qs.exclude(url, ['page']);\n    return fetch(queryToServer)\n        .then(response => response)\n}\n\n\n//this the watcher in middleware. \n// focuses on action \"INIT_APP\".\n// watcher saga will include other actions ('REQUEST_PRODUCTS') \nfunction* mySaga() {\n    yield takeEvery(\"INIT_PRODUCTS\", initProductsPage);\n    yield takeEvery(\"GET_PRODUCTS\", processProducts);\n\n}\n\nexport default mySaga;","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/ProductFilterReducer.js",["66","67"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/filterInfo.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":17},{"ruleId":"72","severity":1,"message":"77","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":34,"column":8,"nodeType":"80","endLine":34,"endColumn":10,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":2,"column":18,"nodeType":"74","messageId":"75","endLine":2,"endColumn":33},{"ruleId":"72","severity":1,"message":"83","line":2,"column":35,"nodeType":"74","messageId":"75","endLine":2,"endColumn":44},{"ruleId":"72","severity":1,"message":"84","line":1,"column":34,"nodeType":"74","messageId":"75","endLine":1,"endColumn":37},{"ruleId":"72","severity":1,"message":"85","line":1,"column":45,"nodeType":"74","messageId":"75","endLine":1,"endColumn":49},{"ruleId":"72","severity":1,"message":"86","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":21},{"ruleId":"72","severity":1,"message":"87","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":30},{"ruleId":"72","severity":1,"message":"88","line":3,"column":32,"nodeType":"74","messageId":"75","endLine":3,"endColumn":45},{"ruleId":"89","severity":1,"message":"90","line":24,"column":88,"nodeType":"91","messageId":"92","endLine":24,"endColumn":90},{"ruleId":"89","severity":1,"message":"93","line":48,"column":109,"nodeType":"91","messageId":"92","endLine":48,"endColumn":111},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'store' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'fetchedProducts' is defined but never used.","'filterUrl' is defined but never used.","'all' is defined but never used.","'fork' is defined but never used.","'useLocation' is defined but never used.","'fetchProductsIfNeeded' is defined but never used.","'fetchProducts' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [dispatch]",{"range":"99","text":"100"},[910,912],"[dispatch]"]