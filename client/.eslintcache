[{"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/index.js":"1","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reportWebVitals.js":"2","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/App.js":"3","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/store/index.js":"4","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/utils/history.js":"5","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/FilterCollection.js":"6","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/CheckboxFilter.js":"7","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/index.js":"8","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/saga/index.js":"9","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions-example/index.js":"10","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions/index.js":"11","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/index.js":"12","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/ProductFilterReducer.js":"13","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/filterInfo.js":"14"},{"size":571,"mtime":1614060699745,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1612352402630,"results":"17","hashOfConfig":"16"},{"size":662,"mtime":1614578779784,"results":"18","hashOfConfig":"16"},{"size":647,"mtime":1614660403020,"results":"19","hashOfConfig":"16"},{"size":87,"mtime":1614042383945,"results":"20","hashOfConfig":"16"},{"size":12774,"mtime":1614660403017,"results":"21","hashOfConfig":"16"},{"size":1412,"mtime":1614060606110,"results":"22","hashOfConfig":"16"},{"size":219,"mtime":1614235113535,"results":"23","hashOfConfig":"16"},{"size":4345,"mtime":1626995504290,"results":"24","hashOfConfig":"16"},{"size":156,"mtime":1614062320308,"results":"25","hashOfConfig":"16"},{"size":3580,"mtime":1614660403017,"results":"26","hashOfConfig":"16"},{"size":352,"mtime":1614660403017,"results":"27","hashOfConfig":"16"},{"size":7087,"mtime":1614754282449,"results":"28","hashOfConfig":"16"},{"size":3830,"mtime":1614473089751,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"znqjzb",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/index.js",[],["63","64"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reportWebVitals.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/App.js",["65","66","67"],"import logo from './logo.svg';\nimport './App.css';\nimport FilterCollection from './filterViews/FilterCollection'\nimport { Switch, Route, Router, Link} from 'react-router-dom';\nimport history from './utils/history'\nimport { connect } from \"react-redux\";\nimport store from './store'\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          <Route exact path='/' render={() => <Link to=\"/products/\">Products</Link>}/>      \n          <Route exact path='/products/' \n            render={() => <FilterCollection />}\n            /> \n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/store/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/utils/history.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/FilterCollection.js",["68","69","70","71","72","73","74","75","76","77","78"],"import React, {useState, useEffect, useLayoutEffect} from \"react\";\nimport { Collapse, Spin, Button} from 'antd';\nimport CheckboxFilter from './CheckboxFilter'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {increment} from '../actions-example'\nimport { Checkbox} from 'antd';\nimport { toggleFilter,fetchProductsIfNeeded, urlManipulation, browserChange, fetchProducts, clearFilters} from '../actions';\nimport { Link, useHistory, useLocation, Redirect} from 'react-router-dom'\nimport 'antd/dist/antd.dark.css'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport qs from 'query-string'\nimport {pageInit, limitInit} from '../initialisation'\n\n\nlet render = 1;\n\nconst { Panel } = Collapse;\n\nconst FilterCollection = () =>{\n  const history = useHistory()\n  const location = useLocation();\n  // const query = new URLSearchParams(history.location.search)\n\n\n  // const queryURL = qs.parse(history.location.search, {parseNumbers: true, arrayFormat:'comma'})\n  const dispatch = useDispatch()\n  const state = useSelector(state => state)\n  \n  const {outcome} = state\n  const {isFetching, filters, data, meta} = outcome \n\n  // const url = qs.stringify(meta.params,\n  //   {arrayFormat: 'comma', skipNull: true, skipEmptyString: true});\n\n  // const url = qs.exclude('?'+url1, ['page']);\n\n  // const {isFetching, data, filters, meta} = fetchedProducts[window.location.search]\n  // || \n  // { \n  //   isFetching: outcome.isFetching,\n  //   data: outcome.data,\n  //   meta: outcome.meta,\n  //   filters: outcome.filters\n  // }\n  \n  \n  // const [Filters, setFilters] = useState({\n  //   category: [],\n  //   brand: [],\n  //   finish: [],\n  //   hold: [],\n  //   hair: [],\n  // });\n \n  // console.log('query: ',qs.parse(history.location.search))\n  // const isFirstRender = useRef(true);\n\n  // useEffect(() => {\n  //   if (isFirstRender.current) {\n  //     isFirstRender.current = false;\n  //   } else {\n  //      console.log('users changed')\n  //      console.log(filterUrl)\n  //   }\n  // }, [filterUrl]);\n   \n    // const [Products, setProducts] = useState([]);\n    // const [IgnoreData, setIgnoreData] = useState(0);\n    // const [BoundData] = useState(4);\n    // const [OnPageSize, setOnPageSize] = useState();\n    // const [loading, setLoading] = useState(false);\n    // const [productAmount, setProductAmount] = useState();\n\n\n    \n    //  using saga instead\n    useEffect(() => {\n      // const pageNo = parseInt(query.get('page')) || 1;\n      \n      // initialise the page with all products \n      // the skip and limit are acknowledged with every render (sent to mongodb)      \n      // dispatch(fetchProductsIfNeeded({params: query.toString(), \n      //                                 config: {skip: 0, \n      //                                 limit: 4 * pageNo,\n      //                                 page: pageNo,\n      //                               }}))\n      // Object.keys(parsedQuery).map( field =>\n      //   parsedQuery[field]= Array.isArray(parsedQuery[field]) ? parsedQuery[field] : [parsedQuery[field]]\n      // )\n\n      // console.log('cleaned', parsedQuery);\n      // setFilters(Object.assign({}, Filters, parsedQuery ));\n\n      // console.log('url on inti', window.location.search);\n\n      // dispatch(fetchProductsIfNeeded({query: '?'+url,\n      //   config: {skip: 0, limit: viewLimit, page: resetPageNo,\n      // }\n      // }));\n    //   dispatch(fetchProductsIfNeeded({query: url ? '?'+url : '',\n    //   config: {skip: 0, limit: viewLimit, page: resetPageNo,\n    // }\n    // }));\n\n    dispatch({type:\"INIT_PRODUCTS\"});\n\n    // window.history.replaceState({state: outcome}, '', ``)\n\n    window.onpopstate = (e) => {\n      console.log('pop');\n          if(e.state !== null){\n            dispatch(browserChange(e.state.state))\n          }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n  // useEffect(()=> {\n  \n  //   if(!isFetching){\n  //     history.push({\n  //       pathname: '/products/',\n  //       search: url,\n  //       state: outcome\n  //     });\n  //   }\n    \n  // }, [meta.params])\n\n  console.log('HISTORY!! ',window.history);\n\n\n// const [ locationKeys, setLocationKeys ] = useState([])\n\n\n\n// useEffect(() => {\n    \n//     return history.listen((location, action) => {\n\n//       // console.log('location in filt: ',location)\n//       if (action === 'PUSH') {\n//         setLocationKeys([ location.key ])\n\n//       }\n\n//       // currently/intialNav: [] - when back is hit: ['xxxx'] - back again: ['yyyy', 'xxxx']\n//       // 'xxxx' key represents the intial point at which the back button is clicked. --back---'xxxx'-intial\n//       // - foward: if the 2nd elem is equal to the current location key => go forward\n\n//       // scenrio \n//         // user clicks back btn, that appends a loc key in LocationKey arr. \n//         // now, user wants to go foward after the prev back action. \n//           // this will bypass the first condition, since theres only 1 elem. \n\n//         // if intialising with a random key. the first back will append key in front. \n\n//       if (action === 'POP') {\n//         if (locationKeys[1] === location.key) {\n//           setLocationKeys(([ _, ...keys ]) => keys)\n//           console.log('the location keys in forward state: ', location.key)\n//           console.log(\"foward\", locationKeys)\n//           // redux must back to the most recent state\n//           console.log('hist state !!!',history.state);\n\n//           // CALL WINDOW_NAV ACTION. old state will be used. Change will happen in this component. \n//           // Id required to identify what location (browser) user is in.\n\n//           // dispatch(fetchProductsIfNeeded(window.location.search))\n//           // dispatch(browserChange(history.location.state))\n//           dispatch(browserChange(window.history.state))\n\n//         }\n//         else{\n          \n//           setLocationKeys((keys) => [ location.key, ...keys ])\n        \n//           console.log('the location keys in back state: ', location.key)\n\n//           //redux must go back to the previous state. type : PREVIOUS_NAV_STATE\n//           console.log(\"back\", locationKeys)\n\n//           console.log('hist state !!!',history.state);\n\n          // dispatch(browserChange(history.location.state))\n//           dispatch(browserChange(window.history.state))\n\n          //dispatch(fetchProductsIfNeeded(window.location.search))\n  \n//         }\n//     }\n//     })\n//   }, [locationKeys])\n\n \n  const onLoadMore = () => {\n    \n    // query.set('limit', 4);\n    // query.set('skip', 0);\n    // history.push({\n    //   pathname: '/products',\n    //   search: query.toString()\n    // })\n    \n\n    // USING THUNK DIRECTLY HERE\n    // dispatch(fetchProductsIfNeeded({\n    //   config: {\n    //           skip: meta.skip + meta.limit,\n    //           limit: limitInit,\n    //           page: meta.page + 1,\n    //           loadMore: true\n    //         }\n    //   }));\n\n    // WATCHED AND MANIPULATED IN REDUX SAGA BEFORE REDUCER\n    dispatch({type:'GET_PRODUCTS', \n      config: {\n                  skip: meta.skip + meta.limit,\n                  limit: limitInit,\n                  page: meta.page + 1,\n                  loadMore: true\n                }\n          });\n\n  // dispatch(urlManipulation(true))\n\n  }\n\n  // useEffect(()=>{\n\n  //   if(didMount){\n  //     return \n  //   }\n\n  //   // query.set('page', meta.page)\n  //   qs.stringify({'page': meta.page})\n  //   // query.sort();\n  //   // pushParamToUrl();\n  //   // dispatch(urlChange(query.toString()))\n\n\n  // }, [meta.page])\n\n\n//  this vs saga (INIT_PRODUCTS)?\n// useEffect(()=>{\n\n//   console.log(query.toString())\n//   const filtersFromUrl = Array.from(query.entries()).map((filter) => { return {id: parseInt(filter[1]), field:filter[0]}});\n\n//   console.log('from url: ',filtersFromUrl)\n\n//   filtersFromUrl.map((filter) => {\n//     return dispatch(toggleFilter(filter.id, filter.field))\n//   });\n\n// }, [])\n\n\n\n// const pushParamToUrl = (query) =>{\n  \n  \n// }\nconst handleChange = (value, field) => {\n  \n  // const currentIndex = Filtered[field].indexOf(value.id);\n  // Filters[field].push(value.id)\n  // setFilters({...Filters})\n  // push to history with updated params. \n  //    In this scenrio, the value id and field will be added or removed in params obj.\n  //    The params obj is updated and the query is stringfied and url is upd.\n  // const query = '?'+qs.stringify(outcome.meta.params, {arrayFormat: 'comma', skipNull: true, skipEmptyString: true})\n\n  // dispatch(urlChange(url))\n\n\n  // pushParamToUrl(qs.stringify(Filtered, {arrayFormat: 'comma'}));\n\n  dispatch(toggleFilter(value.id, field,\n  value.active ? true : false,));\n  \n  // dispatch(fetchProductsIfNeeded({\n  // config: {skip: 0, limit: limitInit, page: pageInit,\n  // }}));\n\n  dispatch({type:'GET_PRODUCTS', \n    config: {skip: 0, limit: limitInit, page: pageInit,}});\n \n  // the checkbox activ. is lagging due to prev store state. \n  // console.log('activity for ', field, value.id, value.active)\n\n  // query.set('page', resetPageNo);\n\n  // qs.stringify({'page': resetPageNo})\n\n  // dispatch(urlChange(filterUrl))\n  // console.log('uel filt in change ',filterUrl);\n\n  \n\n  // dispatch(urlChange(query.toString()))\n\n\n \n}\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n\nconst [activeParams, setActiveParams] = useState([]);\nconsole.log('active params', activeParams);\nuseEffect(() => {\n\n  setActiveParams(\n    Object.keys(meta.params).filter(field =>\n      meta.params[field].length > 0)\n  )\n}, [meta.params])\n\n\nreturn (\n       <>\n        <Link to=\"/\">Home</Link>\n\n        <Button onClick={()=>dispatch(clearFilters())}>Clear All</Button>\n        {/* {console.log('PARAMS ACTIVe',`${Math.floor((Math.random() * 1000))}-min`)} */}\n      {/* {meta.status === 'FETCHED' && */}\n        <Collapse\n          // key={activeParams}\n          \n          // defaultActiveKey={activeParams}\n\n          // className={activeParams.includes(type.field_name) ? 'highlight-border': ''}\n        >\n        { filters &&\n          filters.map((type, i)=> {\n            \n            // if (type.field_name === \"cat\"){\n              //   console.log('obj reduce:', type.data.reduce((sum, next) => {return sum && next.active}))\n              // }\n              //type.input.some((sum)=>  sum.active )\n              // console.log(meta.params[type.field_name].length>0? [type.field_name] : '')\n              return (\n                      <Panel \n                        header={type.title}\n                        className={activeParams.includes(type.field_name) ? 'highlight-border': ''}\n                        // isActive={activeParams.includes(type.field_name) ? true : false}\n                        key={type.field_name}\n                        >\n\n                        {type.input.map((value, i) => {\n                        return (\n                          <Checkbox\n                            key={i}\n                            onChange={() => handleChange(value, type.field_name)}\n                            checked={value.active}>\n                            {value.name}\n                          </Checkbox>\n                          )\n                        })\n                        }\n                      </Panel>\n            )\n          })\n        }\n        </Collapse>\n  {/* } */}\n      \n\n        <Spin indicator={antIcon} spinning={isFetching} delay={500} tip={\"Fetching Products\"}/>\n            {!isFetching && meta.count > 0 && <div style={{position: 'absolute', margin: '0 auto', width: '50%'}}>Amount of products {meta.count}</div>}\n            {meta.count === 0  && <div>No products to show</div>}\n            { data &&\n            data.map(\n                (p,i) => { return (\n                  \n                    <div className=\"tiles-item\" key={i}>\n                        <div className=\"tiles-item-inner center-content\">\n                        <img \n                            // src={p.image}\n                            alt={p.name}\n                            style={{width: \"300px\", height:'300px',}}\n                            />\n                        <div className=\"products-item-content\">\n                        {p.name} <br/>\n                        { p.fragrance ? <p className=\"text-xxs mt-16\">\n                        Smells Like: {p.fragrance}</p> : ''}\n                        <p className=\"text-xs mt-4\">{p.description}</p>\n                        </div>\n                        </div>\n                    </div>\n                        )\n                    }\n                )\n            }\n        {data && !data[meta.count - 1] && !isFetching && meta.count > 0 &&\n          <div className=\"center-content mt-32\"><button onClick={onLoadMore}>Load More</button></div>\n        }   \n      \n      \n</> \n\n    )\n}\n\nexport default FilterCollection\n","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/CheckboxFilter.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/index.js",["79","80"],"import { combineReducers } from 'redux';\nimport {outcome, fetchedProducts, filterUrl} from './ProductFilterReducer';\n\nconst  allReducers = combineReducers({ \n    outcome\n    // filterUrl\n});\n\nexport default allReducers;","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/saga/index.js",["81","82","83","84","85"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions-example/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/ProductFilterReducer.js",["86","87","88","89","90"],"import { useDebugValue } from 'react';\nimport { combineReducers } from 'redux';\nimport {initState} from '../initialisation'\nimport history from '../utils/history'\n\n// export const filterUrl = (state = '', action) => {\n//   switch (action.type) {\n//     case \"URL_CHANGE\":\n//       return action.url\n//     default:\n//       return state\n//   }\n// }\n\n// params: filterInfo.map(filterType => {\n//     return {\n//         [filterType.field_name] : []\n//     }\n// })\nexport const outcome = (state = initState, action) => {\n    switch (action.type) {\n        case 'INIT_FILTER_UI':\n            // exclude page from params obj, since its not needed after init (page in state will be used)\n            const {page, ...updatedParams} = action.urlFilters\n            return {\n                ...state,\n                meta: {\n                ...state.meta,\n                params: {...state.meta.params, ...updatedParams},\n                },\n                filters: state.filters.map( filter => {\n                    const foundField = Object.keys(action.urlFilters).find(field => \n                        field === filter.field_name\n                    )\n                    if(foundField){\n                        return{\n                        ...filter,\n                        // filter_triggered: action.urlFilters[field].length>0? true,\n                        input: filter.input.map((dataInput) => {\n                            // console.log('ACT FILT',action.urlFilters[filter.field_name] === dataInput.id);\n\n                        const foundInput = Array.isArray(action.urlFilters[filter.field_name]) ? \n                            action.urlFilters[filter.field_name].find((input) => input == dataInput.id) \n                            : \n                            action.urlFilters[filter.field_name] === dataInput.id;\n\n                        if(foundInput){\n                            return {\n                            ...dataInput,\n                            active: true,\n                            }\n                        }\n                        return dataInput\n                        }),\n                        }\n                    }\n                    return filter\n                }),\n            }\n        case 'TOGGLE_FILTER':\n        // console.log('toggle act',{...state.meta.params, [action.field]: action.deselect ? state.meta.params[action.field].splice(action.id, 1): [action.id]});\n            return {\n                ...state,\n                meta: {\n                ...state.meta,\n                params: {\n                    ...state.meta.params,\n                    [action.field]: action.deselect ? state.meta.params[action.field].filter(input => input != action.id)\n                    : [...state.meta.params[action.field], action.id]\n                },\n                status: 'TOGGLING_UI',\n                },\n                filters: state.filters.map((filter) =>{\n                if(filter.field_name === action.field){\n                return {\n                    ...filter,\n                    input: filter.input.map((dataInput) => {\n                    if(dataInput.id === action.id){\n                        return {\n                        ...dataInput,\n                        active: action.deselect ? false : true,\n                        }\n                    }\n                    return dataInput\n                    }),\n                    // filter_triggered: true\n                }\n                }\n                return filter;\n            },\n            ),\n            }\n        case 'REQUEST_PRODUCTS':\n            return {\n                ...state,\n                isFetching: true,\n            }\n        case 'RECEIVE_PRODUCTS':\n            // console.log('act in receive',Object.keys(action.meta.params)[0])\n            // console.log('state parrams in recieve',state.meta);\n            return {\n                ...state,\n                meta: {\n                    ...state.meta,\n                    count: action.meta.count,\n                    // page: action.meta.loadMore ? state.meta.page + 1 : action.meta.page,\n                    page: action.meta.page,\n                    skip: action.meta.skip,\n                    // skip: action.meta.loadMore ? action.meta.skip + state.meta.limit : 0,\n                    limit: action.meta.limit,\n                    loadMore: action.meta.loadMore,\n                    params: action.meta.params,\n                },\n            //   filters: action.meta.ui,\n                isFetching: false,\n                data: action.meta.loadMore ? [...state.data, ...action.data]: action.data,\n            }\n        case 'WINDOW_NAV':\n            // console.log('ACT OLD STATE',state);\n            return action.oldState && Object.keys(action.oldState).length ? action.oldState : state;\n        case 'REGISTER_URL':\n            if(window.history){\n                // history.push({pathname: '/products', search: action.url, state:state})\n                // console.log('PUSHED INTO HIST!!', state, action);\n                // console.log('OBJECT KEYS IN PARAMS',Object.keys(state.meta.params).some((filter) => state.meta.params[filter].length));\n\n                //  push state keeps old entry in browser. non-mutated state\n\n                if(!action.initUrl){\n\n                    window.history.pushState({state: state}, '', `/products/${\n                        Object.keys(state.meta.params).some((filter) => state.meta.params[filter].length) \n                        ? \n                        '?'+action.url: ''}`)\n                }   \n                else{\n                    //  when the page loads without \n                    window.history.replaceState({state: state}, '',  `/products/${\n                        action.url\n                        ?\n                        '?'+action.url: ''}`\n                    )\n                }\n            \n            }\n            // after completing state manip. return current state. If not, the state will not be realised by other actions\n            return state\n\n        case 'APPEND_PAGE_URL':\n            // console.log('STATE IN URL CHNA',action.url);\n            if(window.history){\n                // window.history.replaceState({state: state}, '', `?${action.url ? action.url+'&' : ''}${'page='+state.meta.page}`)\n                window.history.replaceState({state: state}, '', `/products/?${action.url ? action.url+'&': ''}page=${state.meta.page}`)\n            }\n            return state\n        // case 'CLEAR_FILTERS':\n        //     return {...state, data: [], filters: []}\n        default:\n            return state\n    }\n} \n\n// export const fetchedProducts = (state = {}, action) =>{\n//   switch (action.type) {\n//     case 'INIT_FILTE_UI':\n//     // case 'TOGGLE_FILTER':\n//     // case 'REQUEST_PRODUCTS':\n//     // case 'RECEIVE_PRODUCTS': \n//       console.log(`%c OUTCOME FUNC. : ${action.type}, ${ action.url}`,'background: #222; color: #bada55')\n//       return {\n//         oldState: outcome(state[action.url], action)\n//       }\n//       default: \n//           return state;\n\n// }\n\n// }\n\n\n","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/filterInfo.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":12},{"ruleId":"95","severity":1,"message":"99","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":17},{"ruleId":"95","severity":1,"message":"100","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":13},{"ruleId":"95","severity":1,"message":"101","line":1,"column":37,"nodeType":"97","messageId":"98","endLine":1,"endColumn":52},{"ruleId":"95","severity":1,"message":"102","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":22},{"ruleId":"95","severity":1,"message":"103","line":5,"column":9,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"104","line":7,"column":23,"nodeType":"97","messageId":"98","endLine":7,"endColumn":44},{"ruleId":"95","severity":1,"message":"105","line":7,"column":46,"nodeType":"97","messageId":"98","endLine":7,"endColumn":61},{"ruleId":"95","severity":1,"message":"106","line":7,"column":78,"nodeType":"97","messageId":"98","endLine":7,"endColumn":91},{"ruleId":"95","severity":1,"message":"107","line":8,"column":41,"nodeType":"97","messageId":"98","endLine":8,"endColumn":49},{"ruleId":"95","severity":1,"message":"108","line":11,"column":8,"nodeType":"97","messageId":"98","endLine":11,"endColumn":10},{"ruleId":"95","severity":1,"message":"109","line":15,"column":5,"nodeType":"97","messageId":"98","endLine":15,"endColumn":11},{"ruleId":"95","severity":1,"message":"110","line":20,"column":9,"nodeType":"97","messageId":"98","endLine":20,"endColumn":16},{"ruleId":"95","severity":1,"message":"111","line":21,"column":9,"nodeType":"97","messageId":"98","endLine":21,"endColumn":17},{"ruleId":"95","severity":1,"message":"112","line":2,"column":18,"nodeType":"97","messageId":"98","endLine":2,"endColumn":33},{"ruleId":"95","severity":1,"message":"113","line":2,"column":35,"nodeType":"97","messageId":"98","endLine":2,"endColumn":44},{"ruleId":"95","severity":1,"message":"114","line":1,"column":34,"nodeType":"97","messageId":"98","endLine":1,"endColumn":37},{"ruleId":"95","severity":1,"message":"115","line":1,"column":45,"nodeType":"97","messageId":"98","endLine":1,"endColumn":49},{"ruleId":"95","severity":1,"message":"116","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":21},{"ruleId":"95","severity":1,"message":"104","line":3,"column":9,"nodeType":"97","messageId":"98","endLine":3,"endColumn":30},{"ruleId":"95","severity":1,"message":"106","line":3,"column":32,"nodeType":"97","messageId":"98","endLine":3,"endColumn":45},{"ruleId":"95","severity":1,"message":"117","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":23},{"ruleId":"95","severity":1,"message":"118","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":25},{"ruleId":"95","severity":1,"message":"119","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":43,"column":88,"nodeType":"122","messageId":"123","endLine":43,"endColumn":90},{"ruleId":"120","severity":1,"message":"124","line":68,"column":109,"nodeType":"122","messageId":"123","endLine":68,"endColumn":111},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'store' is defined but never used.","'useLayoutEffect' is defined but never used.","'CheckboxFilter' is defined but never used.","'increment' is defined but never used.","'fetchProductsIfNeeded' is defined but never used.","'urlManipulation' is defined but never used.","'fetchProducts' is defined but never used.","'Redirect' is defined but never used.","'qs' is defined but never used.","'render' is assigned a value but never used.","'history' is assigned a value but never used.","'location' is assigned a value but never used.","'fetchedProducts' is defined but never used.","'filterUrl' is defined but never used.","'all' is defined but never used.","'fork' is defined but never used.","'useLocation' is defined but never used.","'useDebugValue' is defined but never used.","'combineReducers' is defined but never used.","'history' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]