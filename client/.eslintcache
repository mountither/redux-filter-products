[{"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/index.js":"1","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reportWebVitals.js":"2","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/App.js":"3","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/store/index.js":"4","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/utils/history.js":"5","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/FilterCollection.js":"6","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/index.js":"7","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/saga/index.js":"8","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions/index.js":"9","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/index.js":"10","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/ProductFilterReducer.js":"11","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/filterInfo.js":"12"},{"size":571,"mtime":1614060699745,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1612352402630,"results":"15","hashOfConfig":"14"},{"size":662,"mtime":1614578779784,"results":"16","hashOfConfig":"14"},{"size":647,"mtime":1614660403020,"results":"17","hashOfConfig":"14"},{"size":87,"mtime":1614042383945,"results":"18","hashOfConfig":"14"},{"size":4317,"mtime":1626997228866,"results":"19","hashOfConfig":"14"},{"size":202,"mtime":1626997150486,"results":"20","hashOfConfig":"14"},{"size":3120,"mtime":1626997229736,"results":"21","hashOfConfig":"14"},{"size":955,"mtime":1626997150485,"results":"22","hashOfConfig":"14"},{"size":352,"mtime":1614660403017,"results":"23","hashOfConfig":"14"},{"size":4980,"mtime":1626997150486,"results":"24","hashOfConfig":"14"},{"size":3312,"mtime":1626997150485,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"znqjzb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/index.js",[],["53","54"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reportWebVitals.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/App.js",["55","56","57"],"import logo from './logo.svg';\nimport './App.css';\nimport FilterCollection from './filterViews/FilterCollection'\nimport { Switch, Route, Router, Link} from 'react-router-dom';\nimport history from './utils/history'\nimport { connect } from \"react-redux\";\nimport store from './store'\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          <Route exact path='/' render={() => <Link to=\"/products/\">Products</Link>}/>      \n          <Route exact path='/products/' \n            render={() => <FilterCollection />}\n            /> \n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/store/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/utils/history.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/filterViews/FilterCollection.js",["58"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/index.js",["59","60"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/saga/index.js",["61","62","63","64","65"],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/actions/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/index.js",[],"/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/reducers/ProductFilterReducer.js",["66","67"],"import { useDebugValue } from 'react';\nimport { combineReducers } from 'redux';\nimport {initState} from '../initialisation'\nimport history from '../utils/history'\n\n// export const filterUrl = (state = '', action) => {\n//   switch (action.type) {\n//     case \"URL_CHANGE\":\n//       return action.url\n//     default:\n//       return state\n//   }\n// }\n\n// params: filterInfo.map(filterType => {\n//     return {\n//         [filterType.field_name] : []\n//     }\n// })\nexport const outcome = (state = initState, action) => {\n    switch (action.type) {\n        case 'INIT_FILTER_UI':\n            // exclude page from params obj, since its not needed after init (page in state will be used)\n            const {page, ...updatedParams} = action.urlFilters\n            return {\n                ...state,\n                meta: {\n                ...state.meta,\n                params: {...state.meta.params, ...updatedParams},\n                },\n                filters: state.filters.map( filter => {\n                    const foundField = Object.keys(action.urlFilters).find(field => \n                        field === filter.field_name\n                    )\n                    if(foundField){\n                        return{\n                        ...filter,\n                        // filter_triggered: action.urlFilters[field].length>0? true,\n                        input: filter.input.map((dataInput) => {\n                            // console.log('ACT FILT',action.urlFilters[filter.field_name] === dataInput.id);\n\n                        const foundInput = Array.isArray(action.urlFilters[filter.field_name]) ? \n                            action.urlFilters[filter.field_name].find((input) => input == dataInput.id) \n                            : \n                            action.urlFilters[filter.field_name] === dataInput.id;\n\n                        if(foundInput){\n                            return {\n                            ...dataInput,\n                            active: true,\n                            }\n                        }\n                        return dataInput\n                        }),\n                        }\n                    }\n                    return filter\n                }),\n            }\n        case 'TOGGLE_FILTER':\n        // console.log('toggle act',{...state.meta.params, [action.field]: action.deselect ? state.meta.params[action.field].splice(action.id, 1): [action.id]});\n            return {\n                ...state,\n                meta: {\n                ...state.meta,\n                params: {\n                    ...state.meta.params,\n                    [action.field]: action.deselect ? state.meta.params[action.field].filter(input => input != action.id)\n                    : [...state.meta.params[action.field], action.id]\n                },\n                status: 'TOGGLING_UI',\n                },\n                filters: state.filters.map((filter) =>{\n                if(filter.field_name === action.field){\n                return {\n                    ...filter,\n                    input: filter.input.map((dataInput) => {\n                    if(dataInput.id === action.id){\n                        return {\n                        ...dataInput,\n                        active: action.deselect ? false : true,\n                        }\n                    }\n                    return dataInput\n                    }),\n                    // filter_triggered: true\n                }\n                }\n                return filter;\n            },\n            ),\n            }\n        case 'REQUEST_PRODUCTS':\n            return {\n                ...state,\n                isFetching: true,\n            }\n        case 'RECEIVE_PRODUCTS':\n            // console.log('act in receive',Object.keys(action.meta.params)[0])\n            console.log('state parrams in recieve',state.meta);\n            return {\n                ...state,\n                meta: {\n                    ...state.meta,\n                    count: action.meta.count,\n                    // page: action.meta.loadMore ? state.meta.page + 1 : action.meta.page,\n                    page: action.meta.page,\n                    skip: action.meta.skip,\n                    // skip: action.meta.loadMore ? action.meta.skip + state.meta.limit : 0,\n                    limit: action.meta.limit,\n                    loadMore: action.meta.loadMore,\n                    params: action.meta.params,\n                },\n            //   filters: action.meta.ui,\n                isFetching: false,\n                data: action.meta.loadMore ? [...state.data, ...action.data]: action.data,\n            }\n        case 'WINDOW_NAV':\n            // console.log('ACT OLD STATE',state);\n            return action.oldState && Object.keys(action.oldState).length ? action.oldState : state;\n        case 'REGISTER_URL':\n            if(window.history){\n                // history.push({pathname: '/products', search: action.url, state:state})\n                console.log('PUSHED INTO HIST!!', state, action);\n                console.log('OBJECT KEYS IN PARAMS',Object.keys(state.meta.params).some((filter) => state.meta.params[filter].length));\n\n                //  push state keeps old entry in browser. non-mutated state\n\n                if(!action.initUrl){\n\n                    window.history.pushState({state: state}, '', `/products/${\n                        Object.keys(state.meta.params).some((filter) => state.meta.params[filter].length) \n                        ? \n                        '?'+action.url: ''}`)\n                }   \n                else{\n                    //  when the page loads without \n                    window.history.replaceState({state: state}, '',  `/products/${\n                        action.url\n                        ?\n                        '?'+action.url: ''}`\n                    )\n                }\n            \n            }\n            // after completing state manip. return current state. If not, the state will not be realised by other actions\n            return state\n\n        case 'APPEND_PAGE_URL':\n            console.log('STATE IN URL CHNA',action.url);\n            if(window.history){\n                // window.history.replaceState({state: state}, '', `?${action.url ? action.url+'&' : ''}${'page='+state.meta.page}`)\n                window.history.replaceState({state: state}, '', `/products/?${action.url ? action.url+'&': ''}page=${state.meta.page}`)\n            }\n            return state\n        // case 'CLEAR_FILTERS':\n        //     return {...state, data: [], filters: []}\n        default:\n            return state\n    }\n} \n\n// export const fetchedProducts = (state = {}, action) =>{\n//   switch (action.type) {\n//     case 'INIT_FILTE_UI':\n//     // case 'TOGGLE_FILTER':\n//     // case 'REQUEST_PRODUCTS':\n//     // case 'RECEIVE_PRODUCTS': \n//       console.log(`%c OUTCOME FUNC. : ${action.type}, ${ action.url}`,'background: #222; color: #bada55')\n//       return {\n//         oldState: outcome(state[action.url], action)\n//       }\n//       default: \n//           return state;\n\n// }\n\n// }\n\n\n","/Users/montialrashid/Documents/reactjs/experiments/filter-redux-test-without-url-mw/client/src/initialisation/filterInfo.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":17},{"ruleId":"72","severity":1,"message":"77","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":34,"column":8,"nodeType":"80","endLine":34,"endColumn":10,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":2,"column":18,"nodeType":"74","messageId":"75","endLine":2,"endColumn":33},{"ruleId":"72","severity":1,"message":"83","line":2,"column":35,"nodeType":"74","messageId":"75","endLine":2,"endColumn":44},{"ruleId":"72","severity":1,"message":"84","line":1,"column":34,"nodeType":"74","messageId":"75","endLine":1,"endColumn":37},{"ruleId":"72","severity":1,"message":"85","line":1,"column":45,"nodeType":"74","messageId":"75","endLine":1,"endColumn":49},{"ruleId":"72","severity":1,"message":"86","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":21},{"ruleId":"72","severity":1,"message":"87","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":30},{"ruleId":"72","severity":1,"message":"88","line":3,"column":32,"nodeType":"74","messageId":"75","endLine":3,"endColumn":45},{"ruleId":"89","severity":1,"message":"90","line":24,"column":88,"nodeType":"91","messageId":"92","endLine":24,"endColumn":90},{"ruleId":"89","severity":1,"message":"93","line":48,"column":109,"nodeType":"91","messageId":"92","endLine":48,"endColumn":111},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'store' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'fetchedProducts' is defined but never used.","'filterUrl' is defined but never used.","'all' is defined but never used.","'fork' is defined but never used.","'useLocation' is defined but never used.","'fetchProductsIfNeeded' is defined but never used.","'fetchProducts' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [dispatch]",{"range":"99","text":"100"},[910,912],"[dispatch]"]