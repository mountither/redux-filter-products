[{"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\index.js":"1","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\App.js":"2","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reportWebVitals.js":"3","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filterViews\\FilterCollection.js":"4","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filterViews\\CheckboxFilter.js":"5","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers-example\\index.js":"6","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers-example\\counter.js":"7","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers-example\\islogged.js":"8","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\actions-example\\index.js":"9","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\store-example\\index.js":"10","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\store\\index.js":"11","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filterViews\\utils\\renderCheck.js":"12","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\saga\\index.js":"13","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers\\index.js":"14","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\actions\\index.js":"15","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers\\ProductFilterReducer.js":"16","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filters\\index.js":"17","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\utils\\history.js":"18"},{"size":592,"mtime":1614055748471,"results":"19","hashOfConfig":"20"},{"size":615,"mtime":1614055735903,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":11512,"mtime":1614055603293,"results":"23","hashOfConfig":"20"},{"size":1469,"mtime":1614053750503,"results":"24","hashOfConfig":"20"},{"size":248,"mtime":1611738180843,"results":"25","hashOfConfig":"20"},{"size":257,"mtime":1611738234635,"results":"26","hashOfConfig":"20"},{"size":209,"mtime":1611737850708,"results":"27","hashOfConfig":"20"},{"size":166,"mtime":1611738646426,"results":"28","hashOfConfig":"20"},{"size":205,"mtime":1611740791980,"results":"29","hashOfConfig":"20"},{"size":742,"mtime":1614055922295,"results":"30","hashOfConfig":"20"},{"size":222,"mtime":1614053188584,"results":"31","hashOfConfig":"20"},{"size":2522,"mtime":1614055844264,"results":"32","hashOfConfig":"20"},{"size":247,"mtime":1614054407365,"results":"33","hashOfConfig":"20"},{"size":2665,"mtime":1614057043090,"results":"34","hashOfConfig":"20"},{"size":4424,"mtime":1614055665928,"results":"35","hashOfConfig":"20"},{"size":3911,"mtime":1614055768349,"results":"36","hashOfConfig":"20"},{"size":89,"mtime":1614055704417,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"kz70cn",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\index.js",[],["80","81"],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\App.js",["82","83"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport FilterCollection from './filterViews/FilterCollection'\r\nimport { Switch, Route, Router, Link} from 'react-router-dom';\r\nimport history from './utils/history'\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path='/products' render={() => <FilterCollection />}/> \r\n          <Route path='/' render={() => <Link to='/products'>Products</Link>}/>      \r\n\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reportWebVitals.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filterViews\\FilterCollection.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import React, {useState, useEffect, useRef} from \"react\";\r\nimport { Collapse } from 'antd';\r\nimport CheckboxFilter from './CheckboxFilter'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {increment} from '../actions-example'\r\nimport { Checkbox} from 'antd';\r\nimport { toggleFilter,fetchProductsIfNeeded, urlChange, fetchProducts} from '../actions';\r\nimport { Link, useHistory, useLocation, Redirect} from 'react-router-dom'\r\nimport 'antd/dist/antd.css'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { Spin } from 'antd';\r\nimport {useDidMount} from \"./utils/renderCheck\";\r\nimport qs from 'query-string'\r\n\r\nlet render = 1;\r\n\r\nconst viewLimit = 4;\r\nconst resetPageNo = 1;\r\n\r\nconst FilterCollection = () =>{\r\n  const history = useHistory()\r\n  // const query = new URLSearchParams(history.location.search)\r\n\r\n\r\n  // const queryURL = qs.parse(history.location.search, {parseNumbers: true, arrayFormat:'comma'})\r\n  const queryToServer = qs.exclude(history.location.search, ['page']);\r\n  const parsedQuery = qs.parse(history.location.search,{parseNumbers: true, arrayFormat: 'comma'})\r\n  const dispatch = useDispatch()\r\n  const didMount = useDidMount();\r\n  const state = useSelector(state => state)\r\n  const pageNo = parseInt(parsedQuery.page) || 1;\r\n\r\n  \r\n  const {filterUrl, outcome, fetchedProducts} = state\r\n  \r\n  \r\n  const url1 = qs.stringify(outcome.meta.params, {arrayFormat: 'comma', skipNull: true, skipEmptyString: true});\r\n  const url = qs.exclude('?'+url1, ['page']);\r\n\r\n  console.log('URLLLLL', url);\r\n\r\n  const {isFetching, filters, data, meta} = outcome \r\n  // const {isFetching, data, filters, meta} = fetchedProducts[window.location.search]\r\n  // || \r\n  // { \r\n  //   isFetching: outcome.isFetching,\r\n  //   data: outcome.data,\r\n  //   meta: outcome.meta,\r\n  //   filters: outcome.filters\r\n  // }\r\n  \r\n  \r\n  // const [Filters, setFilters] = useState({\r\n  //   category: [],\r\n  //   brand: [],\r\n  //   finish: [],\r\n  //   hold: [],\r\n  //   hair: [],\r\n  // });\r\n \r\n  // console.log('query: ',qs.parse(history.location.search))\r\n  // const isFirstRender = useRef(true);\r\n\r\n  // useEffect(() => {\r\n  //   if (isFirstRender.current) {\r\n  //     isFirstRender.current = false;\r\n  //   } else {\r\n  //      console.log('users changed')\r\n  //      console.log(filterUrl)\r\n  //   }\r\n  // }, [filterUrl]);\r\n   \r\n    // const [Products, setProducts] = useState([]);\r\n    // const [IgnoreData, setIgnoreData] = useState(0);\r\n    // const [BoundData] = useState(4);\r\n    // const [OnPageSize, setOnPageSize] = useState();\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [productAmount, setProductAmount] = useState();\r\n\r\n\r\n    \r\n    //  using saga instead\r\n    useEffect(() => {\r\n      // const pageNo = parseInt(query.get('page')) || 1;\r\n      \r\n      // initialise the page with all products \r\n      // the skip and limit are acknowledged with every render (sent to mongodb)      \r\n      // dispatch(fetchProductsIfNeeded({params: query.toString(), \r\n      //                                 config: {skip: 0, \r\n      //                                 limit: 4 * pageNo,\r\n      //                                 page: pageNo,\r\n      //                               }}))\r\n      // Object.keys(parsedQuery).map( field =>\r\n      //   parsedQuery[field]= Array.isArray(parsedQuery[field]) ? parsedQuery[field] : [parsedQuery[field]]\r\n      // )\r\n\r\n      // console.log('cleaned', parsedQuery);\r\n      // setFilters(Object.assign({}, Filters, parsedQuery ));\r\n\r\n      // console.log('url on inti', window.location.search);\r\n\r\n      // dispatch(fetchProductsIfNeeded({query: '?'+url,\r\n      //   config: {skip: 0, limit: viewLimit, page: resetPageNo,\r\n      // }\r\n      // }));\r\n    //   dispatch(fetchProductsIfNeeded({query: url ? '?'+url : '',\r\n    //   config: {skip: 0, limit: viewLimit, page: resetPageNo,\r\n    // }\r\n    // }));\r\n    }, []);\r\n    \r\n\r\n  console.log('PARSE fasD q', parsedQuery)\r\n\r\n  useEffect(()=> {\r\n    \r\n    dispatch(fetchProductsIfNeeded({query: url,\r\n    config: {skip: 0, limit: viewLimit, limit: 4 * pageNo, page: pageNo\r\n    }}));\r\n\r\n    history.push({\r\n      pathname: '/products/',\r\n      search: url1\r\n    })\r\n    \r\n  }, [meta.params])\r\n\r\nconst [ locationKeys, setLocationKeys ] = useState([])\r\n\r\n\r\nuseEffect(() => {\r\nconst query = '?'+qs.stringify(history.location.search, {arrayFormat: 'comma', skipNull: true, skipEmptyString: true})\r\n    \r\n    return history.listen((location, action) => {\r\n      // console.log('location in filt: ',location)\r\n      if (action === 'PUSH') {\r\n        setLocationKeys([ location.key ])\r\n      }\r\n\r\n      // currently/intialNav: [] - when back is hit: ['xxxx'] - back again: ['yyyy', 'xxxx']\r\n      // 'xxxx' key represents the intial point at which the back button is clicked. --back---'xxxx'-intial\r\n      // - foward: if the 2nd elem is equal to the current location key => go forward\r\n\r\n      // scenrio \r\n        // user clicks back btn, that appends a loc key in LocationKey arr. \r\n        // now, user wants to go foward after the prev back action. \r\n          // this will bypass the first condition, since theres only 1 elem. \r\n\r\n        // if intialising with a random key. the first back will append key in front. \r\n\r\n      if (action === 'POP') {\r\n        if (locationKeys[1] === location.key) {\r\n          setLocationKeys(([ _, ...keys ]) => keys)\r\n          console.log('the location keys in forward state: ', location.key)\r\n          console.log(\"foward\", locationKeys)\r\n          // redux must back to the most recent state\r\n          console.log(window.location.search);\r\n\r\n          // CALL WINDOW_NAV ACTION. old state will be used. Change will happen in this component. \r\n          // Id required to identify what location (browser) user is in.\r\n\r\n          // dispatch(fetchProductsIfNeeded(window.location.search))\r\n        }\r\n        else{\r\n          \r\n          setLocationKeys((keys) => [ location.key, ...keys ])\r\n        \r\n          console.log('the location keys in back state: ', location.key)\r\n\r\n          //redux must go back to the previous state. type : PREVIOUS_NAV_STATE\r\n          console.log('WINOD LOCLA',window.location.search);\r\n          // dispatch(fetchProductsIfNeeded(window.location.search))\r\n  \r\n        }\r\n    }\r\n    })\r\n  }, [locationKeys])\r\n\r\n \r\n  const onLoadMore = () => {\r\n    \r\n    // query.set('limit', 4);\r\n    // query.set('skip', 0);\r\n    // history.push({\r\n    //   pathname: '/products',\r\n    //   search: query.toString()\r\n    // })\r\n    \r\n    dispatch(fetchProductsIfNeeded({\r\n      params: queryToServer,\r\n      config: {skip: meta.skip,\r\n              limit: viewLimit,\r\n              page: meta.page,\r\n              loadMore: true}}))\r\n    // dispatch(urlChange(query.toString()))\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n    if(didMount){\r\n      return \r\n    }\r\n\r\n    // query.set('page', meta.page)\r\n    qs.stringify({'page': meta.page})\r\n    // query.sort();\r\n    // pushParamToUrl();\r\n    // dispatch(urlChange(query.toString()))\r\n\r\n\r\n  }, [meta.page])\r\n\r\n\r\n//  this vs saga (INIT_PRODUCTS)?\r\n// useEffect(()=>{\r\n\r\n//   console.log(query.toString())\r\n//   const filtersFromUrl = Array.from(query.entries()).map((filter) => { return {id: parseInt(filter[1]), field:filter[0]}});\r\n\r\n//   console.log('from url: ',filtersFromUrl)\r\n\r\n//   filtersFromUrl.map((filter) => {\r\n//     return dispatch(toggleFilter(filter.id, filter.field))\r\n//   });\r\n\r\n// }, [])\r\n\r\n\r\n\r\n// const pushParamToUrl = (query) =>{\r\n  \r\n  \r\n// }\r\nconst handleChange = (value, field) => {\r\n  \r\n  // const currentIndex = Filtered[field].indexOf(value.id);\r\n  // Filters[field].push(value.id)\r\n  // setFilters({...Filters})\r\n  // push to history with updated params. \r\n  //    In this scenrio, the value id and field will be added or removed in params obj.\r\n  //    The params obj is updated and the query is stringfied and url is upd.\r\n  // const query = '?'+qs.stringify(outcome.meta.params, {arrayFormat: 'comma', skipNull: true, skipEmptyString: true})\r\n\r\n  // dispatch(urlChange(url))\r\n\r\n\r\n  // pushParamToUrl(qs.stringify(Filtered, {arrayFormat: 'comma'}));\r\n\r\n \r\n  \r\n\r\n\r\n  dispatch(toggleFilter(value.id, field, url,\r\n    value.active ? true : false,\r\n  ));\r\n  \r\n\r\n  \r\n  // the checkbox activ. is lagging due to prev store state. \r\n  // console.log('activity for ', field, value.id, value.active)\r\n\r\n  // query.set('page', resetPageNo);\r\n\r\n  // qs.stringify({'page': resetPageNo})\r\n\r\n  // dispatch(urlChange(filterUrl))\r\n  // console.log('uel filt in change ',filterUrl);\r\n\r\n  \r\n\r\n  // dispatch(urlChange(query.toString()))\r\n\r\n\r\n \r\n}\r\n\r\n\r\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst { Panel } = Collapse;\r\n\r\n\r\nreturn (\r\n       <>\r\n        <Link to=\"/\">Home</Link>\r\n        {\r\n          filters.map((type, i)=> {\r\n            \r\n            // if (type.field_name === \"cat\"){\r\n            //   console.log('obj reduce:', type.data.reduce((sum, next) => {return sum && next.active}))\r\n            // }\r\n            //type.input.some((sum)=>  sum.active )\r\n            return (\r\n              <div key={i}>\r\n                    <Collapse\r\n                      defaultActiveKey={type.filter_triggered ? type.field_name : ''} \r\n                      className={type.input.some((sum)=>  sum.active) ? 'highlight-border': ''}\r\n                    >\r\n          \r\n                {/* touched previous state tells whether either one  */}\r\n                        <Panel header={type.title} key={type.field_name}>\r\n                        {type.input.map((value, i) => {\r\n                          return (\r\n                            <Checkbox\r\n                              key={i}\r\n                              onChange={() => {handleChange(value, type.field_name)}}\r\n                              checked={value.active}>\r\n                              {value.name}\r\n                            </Checkbox>\r\n                            )\r\n                          })\r\n                        }\r\n                        </Panel>\r\n                    </Collapse>\r\n            \r\n                  </div>\r\n                    )\r\n            })\r\n        }\r\n\r\n       <Spin indicator={antIcon} spinning={isFetching} delay={500} tip={\"Fetching Products\"}/>\r\n\r\n          <div >\r\n            {!isFetching && <div>Amount of products {meta.count}</div>}\r\n            {meta.count == 0  && <div>No products to show</div>}\r\n            {\r\n            data.map(\r\n                (p,i) => { return (\r\n                  \r\n                    <div className=\"tiles-item\" key={i}>\r\n                        <div className=\"tiles-item-inner center-content\">\r\n                        <img \r\n                            // src={p.image}\r\n                            style={{width: \"300px\", height:'300px'}}\r\n                            />\r\n                        <div className=\"products-item-content\">\r\n                        {p.name} <br/>\r\n                        { p.fragrance ? <p className=\"text-xxs mt-16\">\r\n                        Smells Like: {p.fragrance}</p> : ''}\r\n                        <p className=\"text-xs mt-4\">{p.description}</p>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n        {!data[meta.count - 1] && !isFetching &&\r\n          <div className=\"center-content mt-32\"><button onClick={onLoadMore}>Load More</button></div>\r\n          }   \r\n\r\n</> \r\n\r\n    )\r\n}\r\n\r\nexport default FilterCollection\r\n","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filterViews\\CheckboxFilter.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers-example\\index.js",[],["102","103"],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers-example\\counter.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers-example\\islogged.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\actions-example\\index.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\store-example\\index.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\store\\index.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filterViews\\utils\\renderCheck.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\saga\\index.js",["104","105","106","107","108","109","110","111","112","113"],"import { takeEvery, put, select, all, call, fork } from 'redux-saga/effects';\r\nimport { useLocation} from 'react-router-dom'\r\nimport {fetchProductsIfNeeded, fetchProducts, initFilters,urlChange} from '../actions';\r\nimport qs from \"query-string\";\r\n\r\n// this solves the issue of taking query direct from the window location, \r\n// rather than the redux router state.\r\n// when the init_app dispatch is used, the router values will be present,\r\n// we can alter and add the necessary values with this method.\r\nfunction* initApp(action) {\r\n    // url location is extracted (select) from the state.router \r\n\r\n    // const params = new URLSearchParams(window.location.search);\r\n    // console.log('PARAMS',qs.exclude(window.location.search, ['page']))\r\n    const queryURL = qs.parse(window.location.search,{parseNumbers: true, arrayFormat: 'comma'});\r\n    // const urlString = qs.stringify(window.location.search, {arrayFormat: 'comma', skipNull: true, skipEmptyString: true})\r\n\r\n    const queryToServer = qs.exclude(window.location.search, ['page']);\r\n    const pageNo = parseInt(queryURL.page) || 1;\r\n\r\n    // create an array of the items found in url.\r\n    // const filters = Array.from(params.entries()).map((filter) => { return {id: parseInt(filter[1]), field:filter[0]}});\r\n    // store the state router location retrieved from the url. \r\n    \r\n    // problem:\r\n            // when getting old state, the func iterates twice \r\n            // intial state is used for filters. \r\n            // yield all(filters.map((filter) =>  {return put(toggleFilter(filter.id, filter.field, params.toString()))}));\r\n            \r\n    // yield put(urlChange(window.location.search))\r\n            \r\n    if(Object.keys(queryURL).length> 0){\r\n\r\n        Object.keys(queryURL).map( field =>\r\n            queryURL[field]= Array.isArray(queryURL[field]) ? queryURL[field] : [queryURL[field]]\r\n        )\r\n        \r\n        yield put(initFilters(queryURL, window.location.search))\r\n    }        \r\n\r\n    // yield put(fetchProductsIfNeeded({\r\n    //     query: window.location.search,\r\n    //     config: {\r\n    //         skip: 0,\r\n    //         limit: 4 * pageNo,\r\n    //         page: pageNo,\r\n    //         loadMore:false,\r\n    //         // params: queryURL // (action) should be removed if not used in reducer\r\n    //     }\r\n    // }))\r\n    \r\n  \r\n    \r\n\r\n    return;\r\n}\r\n\r\n\r\n//this the watcher in middleware. \r\n// focuses on action \"INIT_APP\".\r\nfunction* mySaga() {\r\n    yield takeEvery(\"INIT_PRODUCTS\", initApp);\r\n}\r\n\r\nexport default mySaga;","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers\\index.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\actions\\index.js",["114"],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\reducers\\ProductFilterReducer.js",["115","116","117","118"],"import { combineReducers } from 'redux';\r\nimport {filterInfo, normalizedData} from '../filters'\r\n\r\n\r\nexport const filterUrl = (state = '', action) => {\r\n  switch (action.type) {\r\n    case \"URL_CHANGE\":\r\n      return action.url\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const outcome = (state = {\r\n  isFetching: false,\r\n  data: [],\r\n  filters: filterInfo,\r\n  meta: {\r\n    limit:4,          \r\n    skip:0,\r\n    page: 1,\r\n    loadMore: false,\r\n    params: {\r\n      category: [],\r\n      brand: [],\r\n      finish: [],\r\n      hold: [],\r\n      hair: [],\r\n    }\r\n  },\r\n}, action) => {\r\n    switch (action.type) {\r\n      case 'INIT_FILTER_UI':\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            ...state.meta,\r\n            params: {\r\n              ...state.meta.params,\r\n              ...action.urlFilters\r\n              }\r\n          },\r\n          filters: state.filters.map( filter => {\r\n            const foundField = Object.keys(action.urlFilters).find(field => \r\n                field === filter.field_name\r\n            )\r\n            if(foundField){\r\n              return{\r\n                ...filter,\r\n                filter_triggered: true,\r\n                input: filter.input.map((dataInput) => {\r\n                  // console.log('ACT FILT',action.urlFilters[filter.field_name] === dataInput.id);\r\n  \r\n                const foundInput = Array.isArray(action.urlFilters[filter.field_name]) ? \r\n                  action.urlFilters[filter.field_name].find((input) => input == dataInput.id) \r\n                  : \r\n                  action.urlFilters[filter.field_name] === dataInput.id;\r\n  \r\n                if(foundInput){\r\n                  return {\r\n                    ...dataInput,\r\n                    active: true,\r\n                  }\r\n                }\r\n                return dataInput\r\n                }),\r\n              }\r\n            }\r\n            return filter\r\n          }),\r\n        }\r\n      case 'TOGGLE_FILTER':\r\n      // console.log('toggle act',{...state.meta.params, [action.field]: action.deselect ? state.meta.params[action.field].splice(action.id, 1): [action.id]});\r\n      return {\r\n          ...state,\r\n          meta: {\r\n            ...state.meta,\r\n            params: {\r\n              ...state.meta.params,\r\n              [action.field]: action.deselect ? state.meta.params[action.field].filter(input => input != action.id)\r\n              : [...state.meta.params[action.field], action.id]\r\n            }\r\n          },\r\n          filters: state.filters.map((filter) =>{\r\n          if(filter.field_name === action.field){\r\n            return {\r\n              ...filter,\r\n              input: filter.input.map((dataInput) => {\r\n                if(dataInput.id === action.id){\r\n                  return {\r\n                    ...dataInput,\r\n                    active: action.deselect ? false : true,\r\n                  }\r\n                }\r\n                return dataInput\r\n              }),\r\n              filter_triggered: true\r\n            }\r\n          }\r\n          return filter;\r\n        },\r\n        ),\r\n        }\r\n      case 'REQUEST_PRODUCTS':\r\n        return {\r\n          ...state,\r\n          isFetching: true,\r\n        }\r\n      case 'RECEIVE_PRODUCTS':\r\n        // console.log('act in receive',Object.keys(action.meta.params)[0])\r\n        console.log('state parrams in recieve',state.meta.params);\r\n        return {\r\n          ...state,\r\n          meta: {\r\n            count: action.meta.count,\r\n            page: action.meta.loadMore ? state.meta.page + 1 : action.meta.page,\r\n            skip: action.meta.loadMore ? action.meta.skip + action.meta.limit: 0,\r\n            limit: action.meta.limit,\r\n            loadMore: action.meta.loadMore,\r\n            params: action.meta.params\r\n          },\r\n          filters: action.meta.ui,\r\n          isFetching: false,\r\n          data: action.meta.loadMore ? [...state.data, ...action.data]: action.data,\r\n\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n} \r\n\r\nexport const fetchedProducts = (state = {}, action) =>{\r\n  switch (action.type) {\r\n    case 'INIT_FILTE_UI':\r\n    // case 'TOGGLE_FILTER':\r\n    // case 'REQUEST_PRODUCTS':\r\n    // case 'RECEIVE_PRODUCTS': \r\n      console.log(`%c OUTCOME FUNC. : ${action.type}, ${ action.url}`,'background: #222; color: #bada55')\r\n      return {\r\n        oldState: outcome(state[action.url], action)\r\n      }\r\n      default: \r\n          return state;\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\filters\\index.js",[],"C:\\Users\\M_A\\Documents\\reactjs-testings\\filter-redux-test\\client\\src\\utils\\history.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":17},{"ruleId":"123","severity":1,"message":"128","line":1,"column":37,"nodeType":"125","messageId":"126","endLine":1,"endColumn":43},{"ruleId":"123","severity":1,"message":"129","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":22},{"ruleId":"123","severity":1,"message":"130","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":18},{"ruleId":"123","severity":1,"message":"131","line":7,"column":46,"nodeType":"125","messageId":"126","endLine":7,"endColumn":55},{"ruleId":"123","severity":1,"message":"132","line":7,"column":57,"nodeType":"125","messageId":"126","endLine":7,"endColumn":70},{"ruleId":"123","severity":1,"message":"133","line":8,"column":28,"nodeType":"125","messageId":"126","endLine":8,"endColumn":39},{"ruleId":"123","severity":1,"message":"134","line":8,"column":41,"nodeType":"125","messageId":"126","endLine":8,"endColumn":49},{"ruleId":"123","severity":1,"message":"135","line":15,"column":5,"nodeType":"125","messageId":"126","endLine":15,"endColumn":11},{"ruleId":"123","severity":1,"message":"136","line":18,"column":7,"nodeType":"125","messageId":"126","endLine":18,"endColumn":18},{"ruleId":"123","severity":1,"message":"137","line":34,"column":10,"nodeType":"125","messageId":"126","endLine":34,"endColumn":19},{"ruleId":"123","severity":1,"message":"138","line":34,"column":30,"nodeType":"125","messageId":"126","endLine":34,"endColumn":45},{"ruleId":"139","severity":1,"message":"140","line":118,"column":41,"nodeType":"141","messageId":"142","endLine":118,"endColumn":46},{"ruleId":"143","severity":1,"message":"144","line":126,"column":6,"nodeType":"145","endLine":126,"endColumn":19,"suggestions":"146"},{"ruleId":"123","severity":1,"message":"147","line":132,"column":7,"nodeType":"125","messageId":"126","endLine":132,"endColumn":12},{"ruleId":"143","severity":1,"message":"148","line":177,"column":6,"nodeType":"145","endLine":177,"endColumn":20,"suggestions":"149"},{"ruleId":"143","severity":1,"message":"150","line":211,"column":6,"nodeType":"145","endLine":211,"endColumn":17,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":325,"column":25,"nodeType":"154","messageId":"142","endLine":325,"endColumn":27},{"ruleId":"155","severity":1,"message":"156","line":332,"column":25,"nodeType":"157","endLine":335,"endColumn":31},{"ruleId":"119","replacedBy":"158"},{"ruleId":"121","replacedBy":"159"},{"ruleId":"123","severity":1,"message":"160","line":1,"column":26,"nodeType":"125","messageId":"126","endLine":1,"endColumn":32},{"ruleId":"123","severity":1,"message":"161","line":1,"column":34,"nodeType":"125","messageId":"126","endLine":1,"endColumn":37},{"ruleId":"123","severity":1,"message":"162","line":1,"column":39,"nodeType":"125","messageId":"126","endLine":1,"endColumn":43},{"ruleId":"123","severity":1,"message":"163","line":1,"column":45,"nodeType":"125","messageId":"126","endLine":1,"endColumn":49},{"ruleId":"123","severity":1,"message":"133","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"123","severity":1,"message":"164","line":3,"column":9,"nodeType":"125","messageId":"126","endLine":3,"endColumn":30},{"ruleId":"123","severity":1,"message":"132","line":3,"column":32,"nodeType":"125","messageId":"126","endLine":3,"endColumn":45},{"ruleId":"123","severity":1,"message":"131","line":3,"column":59,"nodeType":"125","messageId":"126","endLine":3,"endColumn":68},{"ruleId":"123","severity":1,"message":"165","line":18,"column":11,"nodeType":"125","messageId":"126","endLine":18,"endColumn":24},{"ruleId":"123","severity":1,"message":"166","line":19,"column":11,"nodeType":"125","messageId":"126","endLine":19,"endColumn":17},{"ruleId":"123","severity":1,"message":"167","line":70,"column":9,"nodeType":"125","messageId":"126","endLine":70,"endColumn":14},{"ruleId":"123","severity":1,"message":"168","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"169","line":2,"column":21,"nodeType":"125","messageId":"126","endLine":2,"endColumn":35},{"ruleId":"152","severity":1,"message":"153","line":55,"column":78,"nodeType":"154","messageId":"142","endLine":55,"endColumn":80},{"ruleId":"152","severity":1,"message":"170","line":80,"column":103,"nodeType":"154","messageId":"142","endLine":80,"endColumn":105},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'useRef' is defined but never used.","'CheckboxFilter' is defined but never used.","'increment' is defined but never used.","'urlChange' is defined but never used.","'fetchProducts' is defined but never used.","'useLocation' is defined but never used.","'Redirect' is defined but never used.","'render' is assigned a value but never used.","'resetPageNo' is assigned a value but never used.","'filterUrl' is assigned a value but never used.","'fetchedProducts' is assigned a value but never used.","no-dupe-keys","Duplicate key 'limit'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'pageNo', 'url', and 'url1'. Either include them or remove the dependency array.","ArrayExpression",["173"],"'query' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'didMount'. Either include it or remove the dependency array.",["175"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["171"],["172"],"'select' is defined but never used.","'all' is defined but never used.","'call' is defined but never used.","'fork' is defined but never used.","'fetchProductsIfNeeded' is defined but never used.","'queryToServer' is assigned a value but never used.","'pageNo' is assigned a value but never used.","'prods' is assigned a value but never used.","'combineReducers' is defined but never used.","'normalizedData' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [dispatch, history, meta.params, pageNo, url, url1]",{"range":"182","text":"183"},"Update the dependencies array to be: [history, locationKeys]",{"range":"184","text":"185"},"Update the dependencies array to be: [didMount, meta.page]",{"range":"186","text":"187"},[4199,4212],"[dispatch, history, meta.params, pageNo, url, url1]",[6287,6301],"[history, locationKeys]",[7010,7021],"[didMount, meta.page]"]